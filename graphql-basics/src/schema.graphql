    type Query {
        users(query: String): [User!]!
        posts(query: String): [Post!]!
    }

      type Mutation {
        createUser(data: CreateUserInput!): User!
        deleteUser(id: ID!): User!
        updateUser(id: ID!, data: UpdateUserInput!): User!

        createPost(data: CreatePostInput!): Post!
        deletePost(id: ID!): Post!
        updatePost(id: ID!, data: UpdatePostInput!): Post!
    }

    type Subscription {
        count: Int!
        post(userId: ID!): Post!
    }

    input CreateUserInput {
        name: String!
        email: String! 
        age: Int
    }

    input UpdateUserInput {
        name: String
        email: String
        age: Int
    }
    
    input CreatePostInput {
        title: String!
        body: String!
        published: Boolean!
        author: ID!
    }

    input UpdatePostInput {
        title: String
        body: String
        published: Boolean
    }

    type User {
        id: ID!
        name: String!
        email: String!
        age: Int
        posts: [Post!]!
    }

    type Post {
        id: ID!
        title: String!
        body: String!
        published: Boolean!
        author: User!
    }